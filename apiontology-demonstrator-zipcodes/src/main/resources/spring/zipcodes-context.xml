<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:web-services="http://www.springframework.org/schema/web-services"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:soap-endpoint.properties" />
    <context:component-scan base-package="com.unister.semweb.apiontology.zipcodes.client" />
    <web-services:annotation-driven/>

     <!-- REST Client -->
    <bean id="usZipRestClient" class="com.unister.semweb.apiontology.zipcodes.client.DefaultUsZipService">
        <constructor-arg name="restTemplate" ref="restTemplate" />
    </bean>

    <!-- Bean responsible for HTTP access -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg name="requestFactory">
            <bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
                <property name="readTimeout" value="5000" />
            </bean>
        </constructor-arg>
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <constructor-arg name="defaultCharset">
                        <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                            <property name="targetClass" value="java.nio.charset.Charset" />
                            <property name="targetMethod" value="forName" />
                            <property name="arguments" value="UTF-8" />
                        </bean>
                    </constructor-arg>
                </bean>
                <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="marshallerUSZIP" />
                    <property name="unmarshaller" ref="marshallerUSZIP" />
                </bean>
            </list>
        </property>
    </bean>

    <!-- Bean used for JAXB Un-/marshalling -->
    <bean id="marshallerUSZIP" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>com.unister.semweb.apiontology.zipcodes.client.DefaultUsZipService.NewDataSet</value>
                <value>com.unister.semweb.apiontology.zipcodes.client.DefaultUsZipService.Table</value>
            </list>
        </property>
    </bean>

    <!-- Webservice Definitions -->
    <!-- <web-services:annotation-driven/> -->
    
    <!-- WSDL Stuff to define SOAP Envelope -->
    <bean id="zipcodeWsdlDefinition" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition" 
        p:portTypeName="zipcode"
        p:locationUri="/zipcodeService/" 
        p:requestSuffix="-request" 
        p:responseSuffix="-response">
        <property name="schema">
            <bean class="org.springframework.xml.xsd.SimpleXsdSchema" p:xsd="classpath:/schema/zipcode.xsd" />
        </property>
    </bean>

    <bean class="org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping">
        <description>An endpoint mapping strategy that looks for @Endpoint and @PayloadRoot annotations.</description>
    </bean>

    <bean class="org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapter">
        <description>Enables the MessageDispatchServlet to invoke methods requiring OXM marshalling.</description>
        <constructor-arg ref="marshallerZIPCodesSOAP" />
    </bean>

    <bean id="marshallerZIPCodesSOAP" class="org.springframework.oxm.jaxb.Jaxb2Marshaller" p:contextPath="com.unister.semweb.apiontology.zipcodes.domain" />

    <!-- Webservice Template -->
    <bean id="wsTemplate" class="org.springframework.ws.client.core.WebServiceTemplate" 
        p:defaultUri="http://${ws.host}:${ws.port}/${ws.context.path}/zipcodeService/"
        p:marshaller-ref="marshallerZIPCodesSOAP" 
        p:unmarshaller-ref="marshallerZIPCodesSOAP" />

    <!-- <bean id="marshallerWebService" class="org.springframework.oxm.jaxb.Jaxb2Marshaller" p:contextPath="com.unister.semweb.apiontology.zipcodes.domain" />
 -->
 

</beans>